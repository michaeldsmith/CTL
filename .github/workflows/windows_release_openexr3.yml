name: Windows-OpenEXR3-Release

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'doc/**'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'doc/**'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  github-actions-environment-variables-windows:
    runs-on: windows-latest
    steps:
      - name: Ubuntu GitHub Actions environment variables List
        run: env

  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:

    #- name: install dependencies - imath - clone and cmake
    #  run:  |
    #    cd ..
    #    git clone https://github.com/AcademySoftwareFoundation/Imath.git &&
    #    cd Imath &&
    #    mkdir build &&
    #    mkdir _install &&
    #    cd build &&
    #    cmake .. -D"CMAKE_INSTALL_PREFIX=../_install" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} &&
    #    cmake --build . --config ${{env.BUILD_TYPE}} && 
    #    cmake --build . --target install --config ${{env.BUILD_TYPE}} 
    
    - name: install dependencies - zlib
      run:  |
        cd ..
        git clone https://github.com/madler/zlib.git &&
        cd zlib &&
        mkdir build &&
        mkdir install &&
        cd build &&
        cmake .. -D"CMAKE_INSTALL_PREFIX=../install" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} &&
        cmake --build . --config ${{env.BUILD_TYPE}} && 
        cmake --build . --target install --config ${{env.BUILD_TYPE}}

    - name: install dependencies - openexr
      run:  |
        cd ..
        git clone https://github.com/AcademySoftwareFoundation/openexr.git &&
        cd openexr &&
        git checkout RB-3.1 &&
        mkdir build &&
        mkdir install &&
        cd build &&
        cmake .. -D"CMAKE_INSTALL_PREFIX=../install" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TESTING=OFF -DOPENEXR_BUILD_TOOLS=OFF -DOPENEXR_INSTALL_EXAMPLES=OFF &&
        cmake --build . --config ${{env.BUILD_TYPE}} && 
        cmake --build . --target install --config ${{env.BUILD_TYPE}} 

    - uses: actions/checkout@v3

    - name: Configure CMake
    #  # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    #  # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      #run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -D "OpenEXR_DIR=D:/a/CTL/openexr/_install/lib/cmake/OpenEXR" --debug-find 
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -D "CMAKE_PREFIX_PATH=D:/a/CTL/openexr/install/;D:/a/CTL/zlib/install/" 

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

